
# -*- coding:utf-8 -*-
import cv2
from PIL import Image


if __name__ == '__main__':
    cap = cv2.VideoCapture(1)
    cascade_path = "/usr/local/opt/opencv/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml"
    _, frame = cap.read()


    while True:
        _, frame = cap.read()

        cv2.imshow("win",frame)

        k = cv2.waitKey(100)
        #Escキーを押されたら終了
        if k == 27:
            break


    # while True:
    #     _, frame = cap.read()


    #     # 转化为灰度图片
    #     frame_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    #     # 返回 CascadeClassifier 对象
    #     cascade = cv2.CascadeClassifier(cascade_path)

    #     # Detects objects of different sizes in the input image. The detected objects are returned as a list of rectangles.
    #     facerect = cascade.detectMultiScale(frame_gray, scaleFactor=1.2, minNeighbors=3, minSize=(10, 10))
    #     if len(facerect) > 0:
    #         print('face detected')
    #         for rect in facerect:
    #             x, y = rect[0:2]
    #             width, height = rect[2:4]
    #             image = frame[y - 10: y + height, x: x + width]

    #             result = model.predict(image)
    #             if result == 0:  # boss
    #                 print('Boss is approaching')

    #             else:
    #                 print('Not boss')

    #     #10msecキー入力待ち
    #     k = cv2.waitKey(100)
    #     #Escキーを押されたら終了
    #     if k == 27:
    #         break

    キャプチャを終了
    cap.release()
    cv2.destroyAllWindows()
